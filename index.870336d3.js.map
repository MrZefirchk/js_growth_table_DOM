{"mappings":"ACQA,IAAM,EAAY,SAAS,aAAa,CAAC,cACnC,EAAkB,EAAU,aAAa,CAAC,eAC1C,EAAkB,EAAU,aAAa,CAAC,eAC1C,EAAqB,EAAU,aAAa,CAAC,kBAC7C,EAAqB,EAAU,aAAa,CAAC,kBAC7C,EAAY,EAAU,aAAa,CAAC,SAEpC,EAAY,SAAC,CAAnB,EAGE,IACE,IAHI,EAAS,SAAS,aAAa,CAAC,MAGhC,EAAI,EACR,EAAI,EAAK,iBAAiB,CAAC,gBAAgB,CAAC,MAAM,MAAM,CACxD,IACA,CACA,IAAM,EAAU,SAAS,aAAa,CAAC,MAEvC,EAAO,WAAW,CAAC,EACrB,CACA,EAAK,WAAW,CAAC,EACnB,EAEM,EAAY,SAAC,CAAnB,EACE,EAAK,gBAAgB,CAAC,MAAM,EAC9B,EAEM,EAAe,SAAC,CAAtB,EACE,EAAK,gBAAgB,CAAC,MAAM,OAAO,CAAC,SAAC,CAArC,EACE,IAAM,EAAe,SAAS,aAAa,CAAC,MAE5C,EAAK,WAAW,CAAC,EACnB,EACF,EAEM,EAAe,SAAC,CAAtB,EACE,EAAK,gBAAgB,CAAC,MAAM,OAAO,CAAC,SAAC,CAArC,EACE,EAAK,gBAAgB,CAAC,MAAM,EAC9B,EACF,EAEM,EAAqB,WACzB,IAAM,EAAY,EAAU,QAAQ,CAAC,MAAM,CACrC,EAAe,EAAU,UAAU,CAAC,QAAQ,CAAC,MAAM,AAEzD,CAAA,EAAgB,QAAQ,CAAG,GAjDZ,GAkDf,EAAgB,QAAQ,CAAG,GAhDZ,EAiDf,EAAmB,QAAQ,CAAG,GAlDZ,GAmDlB,EAAmB,QAAQ,CAAG,GAjDZ,CAkDpB,EAEA,EAAgB,gBAAgB,CAAC,QAAS,SAAC,CAA3C,EACoB,EAAU,QAAQ,CAAC,MAAM,CAxD5B,KA2Db,EAAU,GACV,IAEJ,GAEA,EAAgB,gBAAgB,CAAC,QAAS,SAAC,CAA3C,EACoB,EAAU,QAAQ,CAAC,MAAM,CA/D5B,IAkEb,EAAU,GACV,IAEJ,GAEA,EAAmB,gBAAgB,CAAC,QAAS,SAAC,CAA9C,EACuB,EAAU,UAAU,CAAC,QAAQ,CAAC,MAAM,CAzEvC,KA4EhB,EAAa,GACb,IAEJ,GAEA,EAAmB,gBAAgB,CAAC,QAAS,SAAC,CAA9C,EACuB,EAAU,UAAU,CAAC,QAAQ,CAAC,MAAM,CAhFvC,IAmFhB,EAAa,GACb,IAEJ,GAEA","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\n// write code here\nvar MAX_ROWS = 10;\nvar MAX_COLUMNS = 10;\nvar MIN_ROWS = 2;\nvar MIN_COLUMNS = 2;\nvar container = document.querySelector(\".container\");\nvar appendRowButton = container.querySelector(\".append-row\");\nvar removeRowButton = container.querySelector(\".remove-row\");\nvar appendColumnButton = container.querySelector(\".append-column\");\nvar removeColumnButton = container.querySelector(\".remove-column\");\nvar tableRows = container.querySelector(\"tbody\");\nvar appendRow = function(rows) {\n    var newRow = document.createElement(\"tr\");\n    for(var i = 0; i < rows.firstElementChild.querySelectorAll(\"td\").length; i++){\n        var newCell = document.createElement(\"td\");\n        newRow.appendChild(newCell);\n    }\n    rows.appendChild(newRow);\n};\nvar removeRow = function(rows) {\n    rows.lastElementChild.remove();\n};\nvar appendColumn = function(rows) {\n    rows.querySelectorAll(\"tr\").forEach(function(elem) {\n        var newTableData = document.createElement(\"td\");\n        elem.appendChild(newTableData);\n    });\n};\nvar removeColumn = function(rows) {\n    rows.querySelectorAll(\"tr\").forEach(function(elem) {\n        elem.lastElementChild.remove();\n    });\n};\nvar updateButtonsState = function() {\n    var rowsCount = tableRows.children.length;\n    var columnsCount = tableRows.firstChild.children.length;\n    appendRowButton.disabled = rowsCount >= MAX_ROWS;\n    removeRowButton.disabled = rowsCount <= MIN_ROWS;\n    appendColumnButton.disabled = columnsCount >= MAX_COLUMNS;\n    removeColumnButton.disabled = columnsCount <= MIN_COLUMNS;\n};\nappendRowButton.addEventListener(\"click\", function(e) {\n    var rowsCount = tableRows.children.length;\n    if (rowsCount < MAX_ROWS) {\n        appendRow(tableRows);\n        updateButtonsState();\n    }\n});\nremoveRowButton.addEventListener(\"click\", function(e) {\n    var rowsCount = tableRows.children.length;\n    if (rowsCount > MIN_ROWS) {\n        removeRow(tableRows);\n        updateButtonsState();\n    }\n});\nappendColumnButton.addEventListener(\"click\", function(e) {\n    var columnsCount = tableRows.firstChild.children.length;\n    if (columnsCount < MAX_COLUMNS) {\n        appendColumn(tableRows);\n        updateButtonsState();\n    }\n});\nremoveColumnButton.addEventListener(\"click\", function(e) {\n    var columnsCount = tableRows.firstChild.children.length;\n    if (columnsCount > MIN_COLUMNS) {\n        removeColumn(tableRows);\n        updateButtonsState();\n    }\n});\nupdateButtonsState();\n\n//# sourceMappingURL=index.870336d3.js.map\n","'use strict';\n\n// write code here\nconst MAX_ROWS = 10;\nconst MAX_COLUMNS = 10;\nconst MIN_ROWS = 2;\nconst MIN_COLUMNS = 2;\n\nconst container = document.querySelector('.container');\nconst appendRowButton = container.querySelector('.append-row');\nconst removeRowButton = container.querySelector('.remove-row');\nconst appendColumnButton = container.querySelector('.append-column');\nconst removeColumnButton = container.querySelector('.remove-column');\nconst tableRows = container.querySelector('tbody');\n\nconst appendRow = (rows) => {\n  const newRow = document.createElement('tr');\n\n  for (\n    let i = 0;\n    i < rows.firstElementChild.querySelectorAll('td').length;\n    i++\n  ) {\n    const newCell = document.createElement('td');\n\n    newRow.appendChild(newCell);\n  }\n  rows.appendChild(newRow);\n};\n\nconst removeRow = (rows) => {\n  rows.lastElementChild.remove();\n};\n\nconst appendColumn = (rows) => {\n  rows.querySelectorAll('tr').forEach((elem) => {\n    const newTableData = document.createElement('td');\n\n    elem.appendChild(newTableData);\n  });\n};\n\nconst removeColumn = (rows) => {\n  rows.querySelectorAll('tr').forEach((elem) => {\n    elem.lastElementChild.remove();\n  });\n};\n\nconst updateButtonsState = () => {\n  const rowsCount = tableRows.children.length;\n  const columnsCount = tableRows.firstChild.children.length;\n\n  appendRowButton.disabled = rowsCount >= MAX_ROWS;\n  removeRowButton.disabled = rowsCount <= MIN_ROWS;\n  appendColumnButton.disabled = columnsCount >= MAX_COLUMNS;\n  removeColumnButton.disabled = columnsCount <= MIN_COLUMNS;\n};\n\nappendRowButton.addEventListener('click', (e) => {\n  const rowsCount = tableRows.children.length;\n\n  if (rowsCount < MAX_ROWS) {\n    appendRow(tableRows);\n    updateButtonsState();\n  }\n});\n\nremoveRowButton.addEventListener('click', (e) => {\n  const rowsCount = tableRows.children.length;\n\n  if (rowsCount > MIN_ROWS) {\n    removeRow(tableRows);\n    updateButtonsState();\n  }\n});\n\nappendColumnButton.addEventListener('click', (e) => {\n  const columnsCount = tableRows.firstChild.children.length;\n\n  if (columnsCount < MAX_COLUMNS) {\n    appendColumn(tableRows);\n    updateButtonsState();\n  }\n});\n\nremoveColumnButton.addEventListener('click', (e) => {\n  const columnsCount = tableRows.firstChild.children.length;\n\n  if (columnsCount > MIN_COLUMNS) {\n    removeColumn(tableRows);\n    updateButtonsState();\n  }\n});\n\nupdateButtonsState();\n"],"names":["container","document","querySelector","appendRowButton","removeRowButton","appendColumnButton","removeColumnButton","tableRows","appendRow","rows","newRow","createElement","i","firstElementChild","querySelectorAll","length","newCell","appendChild","removeRow","lastElementChild","remove","appendColumn","forEach","elem","newTableData","removeColumn","updateButtonsState","rowsCount","children","columnsCount","firstChild","disabled","addEventListener","e"],"version":3,"file":"index.870336d3.js.map"}